import Grid from './components/grid';
import Node from './components/node';
import bfsFlood from './generators/bfs_flood';
import bfsRandomFlood from './generators/bfs_random_flood';
import bfsMazeGenerator from './generators/bfs_maze_generator';
import bfsNonMazeGenerator from './generators/bfs_non_maze_generator';
import primsMazeGenerator from './generators/prims_maze_generator';
import dfsMazeGenerator from './generators/dfs_maze_generator';
import bfsSolver from './solvers/bfs_solver';
import aStarSolver from './solvers/a_star_solver';

document.addEventListener("DOMContentLoaded", () => {
  const root = [30,30];
  const target = [20,20];
  const grid1 = new Grid(100,100);
  const grid2 = new Grid(100,100);
  const grid3 = new Grid(100,100);
  bfsNonMazeGenerator(root, grid1, "1");
  bfsMazeGenerator(root, grid2, "2");
  bfsMazeGenerator(root, grid3, "3");
  window.setTimeout(() => bfsSolver(root, grid1, "bfs", "1", target), 15000);
  window.setTimeout(() => bfsSolver(root, grid2, "dfs", "2", target), 15000);
  window.setTimeout(() => (new aStarSolver(root, grid3, "3", target)).search(), 15000);
  const grid4 = new Grid(100,100);
  const grid5 = new Grid(100,100);
  const grid6 = new Grid(100,100);
  primsMazeGenerator(root, grid4, "4");
  primsMazeGenerator(root, grid5, "5");
  primsMazeGenerator(root, grid6, "6");
  window.setTimeout(() => bfsSolver(root, grid4, "bfs", "4", target), 15000);
  window.setTimeout(() => bfsSolver(root, grid5, "dfs", "5", target), 15000);
  window.setTimeout(() => (new aStarSolver(root, grid6, "6", target)).search(), 15000);
  const grid7 = new Grid(100,100);
  const grid8 = new Grid(100,100);
  const grid9 = new Grid(100,100);
  dfsMazeGenerator(root, grid7, "7");
  dfsMazeGenerator(root, grid8, "8");
  dfsMazeGenerator(root, grid9, "9");
  window.setTimeout(() => bfsSolver(root, grid7, "bfs", "7", target), 15000);
  window.setTimeout(() => bfsSolver(root, grid8, "dfs", "8", target), 15000);
  window.setTimeout(() => (new aStarSolver(root, grid9, "9", target)).search(), 15000);
});
